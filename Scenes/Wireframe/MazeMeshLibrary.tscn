[gd_scene load_steps=9 format=3 uid="uid://dudieask2klp8"]

[ext_resource type="Material" uid="uid://bbxel1d6mv3c4" path="res://Scenes/Wireframe/WireSphereMaterial.tres" id="1_e0s3k"]
[ext_resource type="Material" uid="uid://5e5jnnol42qv" path="res://Scenes/Wireframe/FloorMaterial.tres" id="2_dgsiq"]

[sub_resource type="Shader" id="Shader_a8mvm"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_67ioc"]
render_priority = 0
next_pass = ExtResource("1_e0s3k")
shader = SubResource("Shader_a8mvm")
shader_parameter/albedo = Color(0.0235294, 0.0392157, 0.258824, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 0.26
shader_parameter/metallic_texture_channel = Plane(1, 0, 0, 0)
shader_parameter/specular = 0.76
shader_parameter/metallic = 0.78
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)

[sub_resource type="BoxMesh" id="BoxMesh_2vq08"]
material = SubResource("ShaderMaterial_67ioc")

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_vdqt2"]
points = PackedVector3Array(-0.5, -0.5, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, -0.5, -0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5)

[sub_resource type="QuadMesh" id="QuadMesh_61ukl"]
material = ExtResource("2_dgsiq")
orientation = 1

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_xdwt5"]
data = PackedVector3Array(0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, -0.5, 0, 0.5, -0.5, 0, -0.5, 0.5, 0, -0.5)

[node name="MazeMeshLibrary" type="Node3D"]

[node name="Wall" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.5, 0)
gi_mode = 2
mesh = SubResource("BoxMesh_2vq08")
skeleton = NodePath("")

[node name="StaticBody3D" type="StaticBody3D" parent="Wall"]

[node name="CollisionShape3D2" type="CollisionShape3D" parent="Wall/StaticBody3D"]
shape = SubResource("ConvexPolygonShape3D_vdqt2")

[node name="FloorTile" type="MeshInstance3D" parent="."]
mesh = SubResource("QuadMesh_61ukl")

[node name="StaticBody3D" type="StaticBody3D" parent="FloorTile"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="FloorTile/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_xdwt5")
